{"version":3,"sources":["assets/sunny.jpg","assets/clear.jpg","assets/rainy.jpg","assets/cloudy.jpg","assets/drizzle.jpg","assets/snowy.jpg","assets/default.jpg","assets/thunderstorm.jpg","components/Form/form.styles.jsx","components/Form/form.component.jsx","components/utils/utils.component.jsx","components/Error/error.styles.jsx","components/Error/error.component.jsx","components/Weather/weather.component.jsx","App.styles.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormInput","styled","div","AutocompleteComponent","Autocomplete","Form","props","useState","input","setInput","Fragment","onPlaceSelected","place","formatted_address","loadweather","value","onChange","e","target","onFocus","MaxminTemp","min","max","className","WeatherIcons","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","ErrorComponent","error","role","Weather","cityname","weatherIcon","temp_celsius","temp_max","temp_min","description","charAt","toUpperCase","slice","AppContainer","Image","id","thunderstormImage","drizzleImage","rainyImage","snowyImage","sunnyImage","clearImage","cloudyImage","defaultImage","Api_Key","App","state","city","undefined","country","icon","main","celsius","weatherId","calCelsius","temp","Math","floor","GetWeatherIcon","icons","rangeId","setState","getWeather","a","address_components","long_name","length","fetch","api_call","json","name","sys","weather","this","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06d82a70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny.7e26e881.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clear.1b6d6ac4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.fb337331.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.41d344fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.cd7b5419.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.c025ecc8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.bdb458fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.a430d85b.jpg\";","import Autocomplete from \"react-google-autocomplete\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const FormInput = styled.div`\r\n  width: 35%;\r\n  margin: 0 auto;\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    width: 60% !important;\r\n  }\r\n`;\r\n\r\nexport const AutocompleteComponent = styled(Autocomplete)`\r\n  background-color: transparent;\r\n  text-align: center;\r\n  color: white;\r\n  border: none;\r\n  width: 100%;\r\n  margin-top: 5rem;\r\n  font-size: 1.5rem;\r\n  border-bottom: 2px solid orange;\r\n  border-radius: 0;\r\n  ::placeholder {\r\n    color: rgba(248, 241, 241, 0.7);\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AutocompleteComponent, FormInput } from \"./form.styles\";\r\n\r\nconst Form = props => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormInput>\r\n        <AutocompleteComponent\r\n          onPlaceSelected={place => {\r\n            setInput(place.formatted_address);\r\n            props.loadweather(place);\r\n          }}\r\n          value={input || \"\"}\r\n          onChange={e => setInput(e.target.value)}\r\n          onFocus={e => setInput(\"\")}\r\n        />\r\n      </FormInput>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nexport const MaxminTemp = ({ min, max }) => {\r\n  if (max && min) {\r\n    return (\r\n      <h3>\r\n        <span className=\"px-4\">{min}&deg;</span>\r\n        <span className=\"px-4\">{max}&deg;</span>\r\n      </h3>\r\n    );\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const WeatherIcons = {\r\n  Thunderstorm: \"wi-thunderstorm\",\r\n  Drizzle: \"wi-sleet\",\r\n  Rain: \"wi-storm-showers\",\r\n  Snow: \"wi-snow\",\r\n  Atmosphere: \"wi-fog\",\r\n  Clear: \"wi-day-sunny\",\r\n  Clouds: \"wi-day-fog\"\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorComponent = styled.div`\r\n  height: 50vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport { ErrorComponent } from \"./error.styles\";\r\n\r\nconst error = () => {\r\n  return (\r\n    <ErrorComponent>\r\n      <div className=\"alert alert-danger justify-content-center\" role=\"alert\">\r\n        Please Enter a valid City and Country...!\r\n      </div>\r\n    </ErrorComponent>\r\n  );\r\n};\r\n\r\nexport default error;\r\n","import React from \"react\";\r\nimport { MaxminTemp } from \"../utils/utils.component\";\r\nimport Error from \"../Error/error.component\";\r\nimport \"./weather.style.css\";\r\n\r\nconst Weather = ({\r\n  cityname,\r\n  weatherIcon,\r\n  temp_celsius,\r\n  temp_max,\r\n  temp_min,\r\n  description,\r\n  error\r\n}) => {\r\n  if (!error) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"Card\">\r\n          <h1 className=\"py-3\">{cityname}</h1>\r\n          <h5 className=\"py-4\">\r\n            <i className={`wi ${weatherIcon} display-1`} />\r\n          </h5>\r\n\r\n          {/* Get Celsius */}\r\n          {temp_celsius ? <h1 className=\"py-2\">{temp_celsius}&deg;</h1> : null}\r\n\r\n          {/* show max and min temp */}\r\n          <MaxminTemp min={temp_min} max={temp_max} />\r\n\r\n          {/* Weather description */}\r\n          <h4 className=\"py-3\">\r\n            {description.charAt(0).toUpperCase() + description.slice(1)}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Error />;\r\n  }\r\n};\r\n\r\nexport default Weather;\r\n","import styled from \"styled-components\";\r\nimport sunnyImage from \"./assets/sunny.jpg\";\r\nimport clearImage from \"./assets/clear.jpg\";\r\nimport rainyImage from \"./assets/rainy.jpg\";\r\nimport cloudyImage from \"./assets/cloudy.jpg\";\r\nimport drizzleImage from \"./assets/drizzle.jpg\";\r\nimport snowyImage from \"./assets/snowy.jpg\";\r\nimport defaultImage from \"./assets/default.jpg\";\r\nimport thunderstormImage from \"./assets/thunderstorm.jpg\";\r\n\r\nconst renderBackgroundImage = props => {\r\n  switch (true) {\r\n    case props.id >= 200 && props.id < 232:\r\n      return thunderstormImage;\r\n\r\n    case props.id >= 300 && props.id <= 321:\r\n      return drizzleImage;\r\n\r\n    case props.id >= 500 && props.id <= 521:\r\n      return rainyImage;\r\n\r\n    case props.id >= 600 && props.id <= 622:\r\n      return snowyImage;\r\n\r\n    case props.id >= 701 && props.id <= 781:\r\n      //atomosphere === sunny\r\n      return sunnyImage;\r\n\r\n    case props.id === 800:\r\n      return clearImage;\r\n\r\n    case props.id >= 801 && props.id <= 804:\r\n      return cloudyImage;\r\n\r\n    default:\r\n      return defaultImage;\r\n  }\r\n};\r\n\r\nexport const AppContainer = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100vh;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Image = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url(${renderBackgroundImage});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  transition: background 0.2s linear;\r\n  -webkit-transition: background 0.2s linear;\r\n  z-index: -1;\r\n  filter: brightness(60%);\r\n`;\r\n","import React from \"react\";\r\nimport Form from \"./components/Form/form.component\";\r\nimport Weather from \"./components/Weather/weather.component\";\r\nimport { WeatherIcons } from \"./components/utils/utils.component\";\r\nimport { AppContainer, Image } from \"./App.styles\";\r\n\r\n//bootstrap\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// git project https://github.com/erikflowers/weather-icons\r\nimport \"weather-icons/css/weather-icons.css\";\r\n\r\nconst Api_Key = \"429736441cf3572838aa10530929f7cd\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    city: undefined,\r\n    country: undefined,\r\n    icon: undefined,\r\n    main: undefined,\r\n    celsius: undefined,\r\n    temp_max: null,\r\n    temp_min: null,\r\n    description: \"\",\r\n    error: false,\r\n    weatherId: null\r\n  };\r\n\r\n  calCelsius = temp => {\r\n    let cell = Math.floor(temp - 273.15);\r\n    return cell;\r\n  };\r\n\r\n  GetWeatherIcon = (icons, rangeId) => {\r\n    switch (true) {\r\n      case rangeId >= 200 && rangeId < 232:\r\n        this.setState({ icon: icons.Thunderstorm });\r\n        break;\r\n      case rangeId >= 300 && rangeId <= 321:\r\n        this.setState({ icon: icons.Drizzle });\r\n        break;\r\n      case rangeId >= 500 && rangeId <= 521:\r\n        this.setState({ icon: icons.Rain });\r\n        break;\r\n      case rangeId >= 600 && rangeId <= 622:\r\n        this.setState({ icon: icons.Snow });\r\n        break;\r\n      case rangeId >= 701 && rangeId <= 781:\r\n        //atomosphere === sunny\r\n        this.setState({ icon: icons.Atmosphere });\r\n        break;\r\n      case rangeId === 800:\r\n        this.setState({ icon: icons.Clear });\r\n        break;\r\n      case rangeId >= 801 && rangeId <= 804:\r\n        this.setState({ icon: icons.Clouds });\r\n        break;\r\n      default:\r\n        this.setState({ icon: icons.Clouds });\r\n    }\r\n  };\r\n\r\n  getWeather = async e => {\r\n    if (e.address_components) {\r\n      const city = e.address_components[0].long_name;\r\n      const country =\r\n        e.address_components.length > 3\r\n          ? e.address_components[3].long_name\r\n          : e.address_components[e.address_components.length - 1].long_name;\r\n      if (country && city) {\r\n        const api_call = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\r\n        );\r\n        const { name, sys, weather, main } = await api_call.json();\r\n        if (name !== undefined) {\r\n          this.setState({\r\n            city: `${name}, ${sys.country}`,\r\n            country: sys.country,\r\n            main: weather[0].main,\r\n            celsius: this.calCelsius(main.temp),\r\n            temp_max: this.calCelsius(main.temp_max),\r\n            temp_min: this.calCelsius(main.temp_min),\r\n            description: weather[0].description,\r\n            error: false,\r\n            weatherId: weather[0].id\r\n          });\r\n          this.GetWeatherIcon(WeatherIcons, weather[0].id);\r\n        } else {\r\n          this.setState({\r\n            error: true\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({ error: true });\r\n      }\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      error,\r\n      city,\r\n      icon,\r\n      celsius,\r\n      temp_max,\r\n      temp_min,\r\n      description,\r\n      weatherId\r\n    } = this.state;\r\n    return (\r\n      <AppContainer>\r\n        <Image id={weatherId} />\r\n        <Form loadweather={this.getWeather} />\r\n        <Weather\r\n          cityname={city}\r\n          weatherIcon={icon}\r\n          temp_celsius={celsius}\r\n          temp_max={temp_max}\r\n          temp_min={temp_min}\r\n          description={description}\r\n          error={error}\r\n        />\r\n      </AppContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}